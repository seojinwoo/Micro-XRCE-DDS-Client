// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_AISpeaker.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _dds_AISpeaker_H_
#define _dds_AISpeaker_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "dds_TimeStamp.h"
#include "dds_ErrorCode.h"

typedef enum AISpeakerEventType
{
    AI_SPEAKER_EVENT_BUSY,
    AI_SPEAKER_EVENT_STOP,
    AI_SPEAKER_EVENT_TIMEOUT
} AISpeakerEventType;

typedef uint32_t AISpeakerEventType_cdr;
typedef enum AISpeakerComandType
{
    AI_SPEAKER_VOICE_PLAY,
    AI_SPEAKER_VOICE_STOP,
    AI_SPEAKER_VOLUME_UP,
    AI_SPEAKER_VOLUME_DOWN,
    AI_SPEAKER_VOLUME_MUTE
} AISpeakerComandType;

typedef uint32_t AISpeakerComandType_cdr;
/*!
 * @brief This struct represents the structure AISpeakerEvent defined by the user in the IDL file.
 * @ingroup dds_AISpeaker
 */
typedef struct AISpeakerEvent
{
    TimeStamp stamp;
    AISpeakerEventType_cdr event;
} AISpeakerEvent;

struct ucdrBuffer;

bool AISpeakerEvent_serialize_topic(struct ucdrBuffer* writer, const AISpeakerEvent* topic);
bool AISpeakerEvent_deserialize_topic(struct ucdrBuffer* reader, AISpeakerEvent* topic);
uint32_t AISpeakerEvent_size_of_topic(const AISpeakerEvent* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AISpeakerRequest defined by the user in the IDL file.
 * @ingroup dds_AISpeaker
 */
typedef struct AISpeakerRequest
{
    AISpeakerComandType_cdr command;
    uint16_t voice_type;
} AISpeakerRequest;

struct ucdrBuffer;

bool AISpeakerRequest_serialize_topic(struct ucdrBuffer* writer, const AISpeakerRequest* topic);
bool AISpeakerRequest_deserialize_topic(struct ucdrBuffer* reader, AISpeakerRequest* topic);
uint32_t AISpeakerRequest_size_of_topic(const AISpeakerRequest* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AISpeakerResponse defined by the user in the IDL file.
 * @ingroup dds_AISpeaker
 */
typedef struct AISpeakerResponse
{
    AISpeakerComandType_cdr command;
    ErrorCode_cdr code;
} AISpeakerResponse;

struct ucdrBuffer;

bool AISpeakerResponse_serialize_topic(struct ucdrBuffer* writer, const AISpeakerResponse* topic);
bool AISpeakerResponse_deserialize_topic(struct ucdrBuffer* reader, AISpeakerResponse* topic);
uint32_t AISpeakerResponse_size_of_topic(const AISpeakerResponse* topic, uint32_t size);


#ifdef __cplusplus
}
#endif

#endif // _dds_AISpeaker_H_