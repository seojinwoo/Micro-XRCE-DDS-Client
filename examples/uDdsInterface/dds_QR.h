// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_QR.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _dds_QR_H_
#define _dds_QR_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "dds_TimeStamp.h"
#include "dds_ErrorCode.h"

typedef enum QREventType
{
    QR_EVENT_READ,
    QR_EVENT_TIMEOUT
} QREventType;

typedef uint32_t QREventType_cdr;
typedef enum QRCommand
{
    QR_CMD_SETUP
} QRCommand;

typedef uint32_t QRCommand_cdr;
/*!
 * @brief This struct represents the structure QRReadEvent defined by the user in the IDL file.
 * @ingroup dds_QR
 */
typedef struct QRReadEvent
{
    TimeStamp stamp;
    QREventType_cdr event;
    char read_string[255];

} QRReadEvent;

struct ucdrBuffer;

bool QRReadEvent_serialize_topic(struct ucdrBuffer* writer, const QRReadEvent* topic);
bool QRReadEvent_deserialize_topic(struct ucdrBuffer* reader, QRReadEvent* topic);
uint32_t QRReadEvent_size_of_topic(const QRReadEvent* topic, uint32_t size);

/*!
 * @brief This struct represents the structure QRReadRequest defined by the user in the IDL file.
 * @ingroup dds_QR
 */
typedef struct QRReadRequest
{
    QRCommand_cdr command;} QRReadRequest;

struct ucdrBuffer;

bool QRReadRequest_serialize_topic(struct ucdrBuffer* writer, const QRReadRequest* topic);
bool QRReadRequest_deserialize_topic(struct ucdrBuffer* reader, QRReadRequest* topic);
uint32_t QRReadRequest_size_of_topic(const QRReadRequest* topic, uint32_t size);

/*!
 * @brief This struct represents the structure QRReadResponse defined by the user in the IDL file.
 * @ingroup dds_QR
 */
typedef struct QRReadResponse
{
    QRCommand_cdr command;
    ErrorCode_cdr code;
} QRReadResponse;

struct ucdrBuffer;

bool QRReadResponse_serialize_topic(struct ucdrBuffer* writer, const QRReadResponse* topic);
bool QRReadResponse_deserialize_topic(struct ucdrBuffer* reader, QRReadResponse* topic);
uint32_t QRReadResponse_size_of_topic(const QRReadResponse* topic, uint32_t size);


#ifdef __cplusplus
}
#endif

#endif // _dds_QR_H_