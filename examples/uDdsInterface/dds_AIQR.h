// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_AIQR.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _dds_AIQR_H_
#define _dds_AIQR_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "dds_TimeStamp.h"
#include "dds_ErrorCode.h"

typedef enum AIQREventType
{
    AIQR_EVENT_MATCH,
    AIQR_EVENT_NOT_MATCH,
    AIQR_EVENT_TIMEOUT
} AIQREventType;

typedef uint32_t AIQREventType_cdr;
typedef enum AIQRCommandType
{
    AIQR_CMD_SETUP
} AIQRCommandType;

typedef uint32_t AIQRCommandType_cdr;
/*!
 * @brief This struct represents the structure AIQREvent defined by the user in the IDL file.
 * @ingroup dds_AIQR
 */
typedef struct AIQREvent
{
    TimeStamp stamp;
    AIQREventType_cdr event;
    char read_string[255];

} AIQREvent;

struct ucdrBuffer;

bool AIQREvent_serialize_topic(struct ucdrBuffer* writer, const AIQREvent* topic);
bool AIQREvent_deserialize_topic(struct ucdrBuffer* reader, AIQREvent* topic);
uint32_t AIQREvent_size_of_topic(const AIQREvent* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AIQRRequest defined by the user in the IDL file.
 * @ingroup dds_AIQR
 */
typedef struct AIQRRequest
{
    AIQRCommandType_cdr command;} AIQRRequest;

struct ucdrBuffer;

bool AIQRRequest_serialize_topic(struct ucdrBuffer* writer, const AIQRRequest* topic);
bool AIQRRequest_deserialize_topic(struct ucdrBuffer* reader, AIQRRequest* topic);
uint32_t AIQRRequest_size_of_topic(const AIQRRequest* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AIQRResponse defined by the user in the IDL file.
 * @ingroup dds_AIQR
 */
typedef struct AIQRResponse
{
    AIQRCommandType_cdr command;
    ErrorCode_cdr code;
} AIQRResponse;

struct ucdrBuffer;

bool AIQRResponse_serialize_topic(struct ucdrBuffer* writer, const AIQRResponse* topic);
bool AIQRResponse_deserialize_topic(struct ucdrBuffer* reader, AIQRResponse* topic);
uint32_t AIQRResponse_size_of_topic(const AIQRResponse* topic, uint32_t size);


#ifdef __cplusplus
}
#endif

#endif // _dds_AIQR_H_