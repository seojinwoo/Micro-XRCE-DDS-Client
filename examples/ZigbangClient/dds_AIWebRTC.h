// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_AIWebRTC.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _dds_AIWebRTC_H_
#define _dds_AIWebRTC_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "dds_TimeStamp.h"
#include "dds_ErrorCode.h"

typedef enum AIWebRTCEventType
{
    AI_WEBRTC_EVENT_CONNECTING,
    AI_WEBRTC_EVENT_CONNECTED,
    AI_WEBRTC_EVENT_DISCONNECTING,
    AI_WEBRTC_EVENT_DISCONNECTED
} AIWebRTCEventType;

typedef uint32_t AIWebRTCEventType_cdr;
typedef enum AIWebRTCCommand
{
    AI_WEBRTC_CMD_CONNECT,
    AI_WEBRTC_CMD_DISCONNECT
} AIWebRTCCommand;

typedef uint32_t AIWebRTCCommand_cdr;
/*!
 * @brief This struct represents the structure AIWebRTCEvent defined by the user in the IDL file.
 * @ingroup dds_AIWebRTC
 */
typedef struct AIWebRTCEvent
{
    TimeStamp stamp;
    AIWebRTCEventType_cdr event;
} AIWebRTCEvent;

struct ucdrBuffer;

bool AIWebRTCEvent_serialize_topic(struct ucdrBuffer* writer, const AIWebRTCEvent* topic);
bool AIWebRTCEvent_deserialize_topic(struct ucdrBuffer* reader, AIWebRTCEvent* topic);
uint32_t AIWebRTCEvent_size_of_topic(const AIWebRTCEvent* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AIWebRTCRequest defined by the user in the IDL file.
 * @ingroup dds_AIWebRTC
 */
typedef struct AIWebRTCRequest
{
    AIWebRTCCommand_cdr command;
    char destination[20][255];

    uint16_t timeout_sec;
} AIWebRTCRequest;

struct ucdrBuffer;

bool AIWebRTCRequest_serialize_topic(struct ucdrBuffer* writer, const AIWebRTCRequest* topic);
bool AIWebRTCRequest_deserialize_topic(struct ucdrBuffer* reader, AIWebRTCRequest* topic);
uint32_t AIWebRTCRequest_size_of_topic(const AIWebRTCRequest* topic, uint32_t size);

/*!
 * @brief This struct represents the structure AIWebRTCResponse defined by the user in the IDL file.
 * @ingroup dds_AIWebRTC
 */
typedef struct AIWebRTCResponse
{
    AIWebRTCCommand_cdr command;
    ErrorCode_cdr code;
    char destination[20][255];

    uint16_t timeout_sec;
} AIWebRTCResponse;

struct ucdrBuffer;

bool AIWebRTCResponse_serialize_topic(struct ucdrBuffer* writer, const AIWebRTCResponse* topic);
bool AIWebRTCResponse_deserialize_topic(struct ucdrBuffer* reader, AIWebRTCResponse* topic);
uint32_t AIWebRTCResponse_size_of_topic(const AIWebRTCResponse* topic, uint32_t size);


#ifdef __cplusplus
}
#endif

#endif // _dds_AIWebRTC_H_