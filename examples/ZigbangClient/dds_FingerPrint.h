// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file dds_FingerPrint.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _dds_FingerPrint_H_
#define _dds_FingerPrint_H_

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include <stdbool.h>
#include "dds_TimeStamp.h"
#include "dds_ErrorCode.h"

typedef enum FingerPrintEventType
{
    FP_EVENT_MATCH,
    FP_EVENT_NOT_MATCH,
    FP_EVENT_TIMEOUT
} FingerPrintEventType;

typedef uint32_t FingerPrintEventType_cdr;
typedef enum FingerPrintCommandType
{
    FP_CMD_POWER_ON,
    FP_CMD_POWER_OFF,
    FP_CMD_REG_MODE,
    FP_CMD_REG_USER_COUNT,
    FP_CMD_USER_DELETE,
    FP_CMD_USER_ALL_DELETE
} FingerPrintCommandType;

typedef uint32_t FingerPrintCommandType_cdr;
/*!
 * @brief This struct represents the structure FingerPrintEvent defined by the user in the IDL file.
 * @ingroup dds_FingerPrint
 */
typedef struct FingerPrintEvent
{
    TimeStamp stamp;
    FingerPrintEventType_cdr event;
    char user_id[255];

} FingerPrintEvent;

struct ucdrBuffer;

bool FingerPrintEvent_serialize_topic(struct ucdrBuffer* writer, const FingerPrintEvent* topic);
bool FingerPrintEvent_deserialize_topic(struct ucdrBuffer* reader, FingerPrintEvent* topic);
uint32_t FingerPrintEvent_size_of_topic(const FingerPrintEvent* topic, uint32_t size);

/*!
 * @brief This struct represents the structure FingerPrintRequest defined by the user in the IDL file.
 * @ingroup dds_FingerPrint
 */
typedef struct FingerPrintRequest
{
    TimeStamp stamp;
    FingerPrintCommandType_cdr command;
    char user_id[255];

    uint16_t timeout_sec;
} FingerPrintRequest;

struct ucdrBuffer;

bool FingerPrintRequest_serialize_topic(struct ucdrBuffer* writer, const FingerPrintRequest* topic);
bool FingerPrintRequest_deserialize_topic(struct ucdrBuffer* reader, FingerPrintRequest* topic);
uint32_t FingerPrintRequest_size_of_topic(const FingerPrintRequest* topic, uint32_t size);

/*!
 * @brief This struct represents the structure FingerPrintResponse defined by the user in the IDL file.
 * @ingroup dds_FingerPrint
 */
typedef struct FingerPrintResponse
{
    FingerPrintCommandType_cdr command;
    uint16_t user_count;
    ErrorCode_cdr code;
} FingerPrintResponse;

struct ucdrBuffer;

bool FingerPrintResponse_serialize_topic(struct ucdrBuffer* writer, const FingerPrintResponse* topic);
bool FingerPrintResponse_deserialize_topic(struct ucdrBuffer* reader, FingerPrintResponse* topic);
uint32_t FingerPrintResponse_size_of_topic(const FingerPrintResponse* topic, uint32_t size);


#ifdef __cplusplus
}
#endif

#endif // _dds_FingerPrint_H_